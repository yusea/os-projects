//
boot xv6: make qemu

// REAMDME for PJ1

1.create the procinfo strct in procinfo.c
2.write int getprocsinfo(struct procinfo*) in proc.c
3.write a sys edition getprocsinfo in sysproc.c
4.link func and struct in several files, syscall.c ect.
5.write a test in testgetprocsinfo.c
6.Modified Makefile

Just add a function of syscall, get info from ptable, //
and does not have any change on other func and status.
So it has small effect on overhead.


// README for pj2

Part A: Null-pointer Dereference
1.add a file testnonpointer to test if can access a non pointer(yes, if default).
2.in exec.c: load an empty page at address 0 and leave it there, copy our code and data begin at the second page.
3.Makefile: change the user program' entry to 0x1000 not 0.
4.use testnonpointer to test, can not access now.

Part B: Shared Pages
1.In proc.h create a struct for share memory page.
2.In proc.c in fork() and wait() map page and change the count.


